services:
  koradi-mongo:
    container_name: koradi-mongo
    image: mongo:6
    restart: unless-stopped
    ports: ["27017:27017"]
    volumes:
      - ../mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    networks:
      - my_shared_network

  koradi-mongo-express:
    container_name: koradi-mongo-express
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: pass
      ME_CONFIG_MONGODB_URL: ${MONGO_URI}
    depends_on: [koradi-mongo]
    networks:
      - my_shared_network

  koradi-server:
    container_name: koradi-server
    image: node:18-alpine
    working_dir: /app
    command: sh -c "npm ci && node src/server.js"
    volumes:
      - ../server:/app
    environment:
      - PORT=${PORT}
      - MONGO_URI=${MONGO_URI}
      - MONGO_DATABASE=${MONGO_DATABASE}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - BOLD_PRIVATE_KEY=${BOLD_PRIVATE_KEY}
      - ORG_NAME=${ORG_NAME}
      - GOAL_MIN=${GOAL_MIN}
      - GOAL_MAX=${GOAL_MAX}
      - BINGO_PRICE=${BINGO_PRICE}
    ports: ["4000:4000"]
    depends_on: [koradi-mongo]
    networks:
      - my_shared_network

  koradi-web:
    container_name: koradi-ui
    image: nginx:alpine
    volumes:
      - ../client/dist:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    # ports: ["80:80", "443:443"]
    ports: ["8087:80"]
    depends_on: [koradi-server]
    networks:
      - my_shared_network

networks:
  my_shared_network:
    external: true # Reference the same external network as the other services
